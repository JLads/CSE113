In c, arrays only hold one type of data. Thus arrays are good for storing say, output from a given input. This is because an array is in essence a long string full of integers, floats, or whatever else. For instance assume a sample of ages. There will be many aged people spread out from probably 0 to 90 and their ages can be stored in the array fashion. From there fucntions could be performed, like finding the average, the max, the min, and so on and so forth. When analyzing an output y from input x, arrays are very effective

Once however you need to store multiple types of data in one place, arrays become a major pain. Say for example we want to store student information. There is the name, id number, roll call number, grade, and address in this hyppothethical system. If we were to do this with only arrays, there would have to be a seperate array for each data section. Not only that, but the students would have to be in the same order in each array. Structures here save a lot of trouble. By using a structure we can set one variable for all of the data and then pull pieces of that data for functions by just passing in the structure and then calling from it the exact data point types needed for a function. Doing this allows many fewer things to be passed into functions in the prototypes and in the initializaion ofthe functions. 
